version: '3'
networks:
  development:
  test:
volumes:
  db_data:
  gem_cache:
  shared_data:
services:
  redis:
    image: redis:alpine
    container_name: find_animals_redis
    restart: always
    command: redis-server
    networks:
      - development
    volumes:
      - shared_data:/var/shared/redis
  db:
    image: postgres:alpine
    container_name: find_animals_db
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
      - shared_data:/var/shared
    networks:
      - development
      - test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 5099:5432
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: find_animals
    restart: always
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    ports:
      - 5000:3000
    stdin_open: true
    tty: true
    env_file: .env
    entrypoint: dev-entrypoint.sh
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    environment:
      RAILS_ENV: development
    depends_on:
      - db
      - redis
  app_test:
    image: find_animals_app
    container_name: find_animals_test
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - test
    ports:
      - 3001:3000
    stdin_open: true
    tty: true
    env_file: .env.test
    entrypoint: test-entrypoint.sh
    command: ["rails", "-v"]
    environment:
      RAILS_ENV: test
    depends_on:
      - db
      
